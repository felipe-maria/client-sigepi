openapi: 3.0.1
info:
  contact:
    email: felipe.antonio.maria@gmail.com
  description: 'API for Sigepi service '
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: SIGEPI API
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - description: app-local
    url: http://localhost:8080/
security:
  - token_auth: [ ]

tags:
  - name: tickets
    description: Everything related to Ticket resource
  - name: users
    description: Everything related to User resource

paths:
  /tickets:
    get:
      summary: List all Tickets
      description: List all Tickets for current user
      operationId: listAllTickets
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TicketTO'
                type: array
          description: successful operation
        "400":
          content: { }
          description: Invalid status value
      tags:
        - tickets
      x-accepts: application/json
      x-tags:
        - tag: tickets
  /users:
    get:
      summary: List all Users
      description: List all Users
      operationId: listAllUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserTO'
                type: array
          description: successful operation
        "400":
          content: { }
          description: Invalid status value
      tags:
        - users
      x-accepts: application/json
      x-tags:
        - tag: users

    post:
      summary: Add a new User
      description: Add a new User
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserITO'
        description: An object containing only raw values and Ids for creating
          a TTI
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTO'
          description: successful operation
      tags:
        - users
      x-contentType: application/json
      x-accepts: application/json
      x-tags:
        - tag: users

components:
  schemas:

##############################################
# Read only TOs section (Not input TO)
##############################################

    TicketTO:
      properties:
        id:
          format: int64
          type: integer
          example: 1
    UserTO:
      properties:
        id:
          format: int64
          type: integer
          example: 1
        name:
          type: string
          minLength: 5
          maxLength: 75
        emailAddress:
          type: string
        cpfNumber:
          type: string
          minLength: 5
          maxLength: 11
        rgNumber:
          type: string
        rgIssuerCode:
          type: string

#############################################
# ITO - Input TO Section
#############################################
    CreateUserITO:
      required:
        - name
        - emailAddress
        - cpfNumber
      properties:
        name:
          type: string
          minLength: 5
          maxLength: 75
          example: John Doe
        emailAddress:
          type: string
          minLength: 9
          maxLength: 100
          example: john.doe@mail.com
        cpfNumber:
          type: string
          minLength: 11
          maxLength: 11
          example: 35522245722

  securitySchemes:
    token_auth:
      bearerFormat: JWT
      description: This is the bearer token.
      scheme: bearer
      type: http
